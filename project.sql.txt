declare
   v_contract_id contracts.contract_id%type;
   v_installment_id installments_paid.installment_id%type;
   v_installment_date date; 	v_installment_amount number;
   v_paid number := 0; 		v_payment_type_multiplier number;
      
cursor contract_cursor is
   select contract_id, contract_startdate, contract_enddate, 
          contract_payment_type, contract_total_fees, contract_deposit_fees 
              
   from contracts; 
                               
begin
   for contract_rec in contract_cursor loop  
      v_contract_id := contract_rec.contract_id;      
      v_payment_type_multiplier := case 
                                     when contract_rec.contract_payment_type = 'quarter' then 4
                                     when contract_rec.contract_payment_type = 'annual' then 1
                                     when contract_rec.contract_payment_type = 'monthly' then 12
                                     when contract_rec.contract_payment_type = 'half_annual' then 2
                                     else 1 
                                     end;
     
   for i in 1..trunc(months_between(contract_rec.contract_enddate, contract_rec.contract_startdate) / 12) * v_payment_type_multiplier loop               
         v_installment_date := add_months(contract_rec.contract_startdate, (i - 1) * (12 / v_payment_type_multiplier));
         v_installment_amount := round((contract_rec.contract_total_fees - nvl(contract_rec.contract_deposit_fees, 0)) / (trunc(months_between(contract_rec.contract_enddate, contract_rec.contract_startdate) / 12) * v_payment_type_multiplier), 2);
         
         select installments_paid_seq.nextval 
         into v_installment_id from dual;
         
         insert into installments_paid (installment_id, contract_id, installment_date, installment_amount, paid)  
         values (v_installment_id, v_contract_id, v_installment_date, v_installment_amount, v_paid);
                                    
   commit;
   end loop;
   end loop;   
end;

